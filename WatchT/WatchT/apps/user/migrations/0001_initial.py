# Generated by Django 2.2.6 on 2021-02-12 14:08

import WatchT.apps.user.models
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmployeeUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(db_column='Id', default=uuid.uuid4, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=40, unique=True, verbose_name='Почта')),
                ('username', models.CharField(max_length=40, unique=True, verbose_name='Имя пользователя')),
                ('first_name', models.CharField(blank=True, default='Name', max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, default='Surname', max_length=30, verbose_name='Фамилия')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('photo', models.ImageField(default='default_user_pic.jpg', upload_to=WatchT.apps.user.models.user_photo_upload_to, verbose_name='Фото')),
                ('role', models.IntegerField(choices=[(0, 'Гость'), (1, 'Разработчик'), (2, 'Аналитик'), (3, 'Тимлид'), (4, 'Администратор сайта')], default=0, verbose_name='Роль')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
    ]
